# Input DNA strings
s = '''TTGCTGTTCCACGTCTGATTGCTGTTCCGCTGTTCTCTATTGCTGTTCTTCGAAAGGCTGTTCACGCTGTTCGGCTGTTCCTAAAGGCTGTTCAGGCTGTTCGGGCTGTTCGCTGTTCCCCGTAGGCTGTTCAGCTGTTCGTTGCTGTTCTGGGCTGTTCTGCTGTTCGCTGTTCCAGTGGCTGTTCCGGCTGTTCGCTGTTCATGCTGTTCGGCTGTTCGCTGTTCGCTGTTCACGCTGTTCTTGCTGTTCGTGCTGTTCGCTGTTCGCTGTTCAAATGTATGCTGTTCGCCGCTGTTCTGGGCTGTTCTATTGACTGCTGTTCACAGCTGTTCGCTGTTCGGTTTCGACGCTGTTCTGTGCTGTTCTGAGGATATCGCTGTTCCTAGCTGTTCGTCGTGCTGTTCGCTGTTCAGGGCTGTTCAACTGCTGTTCCCGCTGTTCGCTGTTCATCAGCTGTTCCGCTGTTCAGCTGTTCGATCCAGCTGTTCTACGTAGCTGTTCACGCTGACCCCGCTGTTCTGAGCTGTTCTGCTGTTCTTATCATGCTGTTCCGCTGTTCTACGCTGTTCGCTGTTCGAGACGCTGTTCTTGCTGTTCAGCTGTTCGCTGTTCACGCTGTTCGCTGTTCTGCTGTTCGCTGTTCAGCTGTTCGATGCTGTTCGCTGTTCAGCTGTTCACTGGCTGTTCTTGAGCTGTTCTTCCGGCTGTTCCGCTGTTCGCTGTTCCCCGCTGTTCGCAGTGGGCTGTTCAAGCTGTTCGGCTGGCTGTTCCCTATCGCTGTTCTATGGCTGTTCGATTAAGCTGTTCCTGCTGTTCATGAATGGGGATAGCGGCTGTTCGCTGTTCGGCTGTTCGGCTGTTCACGTTACAGCTGTTCGCTGTTCAGGCTGTTCGGCTGTTCAGGCTGTTCTGCTGTTC'''
t = "GCTGTTCGC"

# Find all positions of t as a substring of s
positions = []
for i in range(len(s) - len(t) + 1):  # Ensure we don't exceed the length of s
    if s[i:i+len(t)] == t:
        positions.append(i + 1)  # Convert 0-based index to 1-based

# Output the positions
print(" ".join(map(str, positions)))
